"0",""
"0","airquality_filename <- here::here(c(""data/airqualitydata-2015H1.csv"",""data/airqualitydata-2016H1.csv"","
"0","            ""data/airqualitydata-2017H1.csv"", ""data/airqualitydata-2018H1.csv"","
"0","            ""data/airqualitydata-2019Q1.csv"",""data/airqualitydata-2019Q2.csv"","
"0","            ""data/airqualitydata-2019Q3.csv"", ""data/airqualitydata-2019Q4.csv"","
"0","            ""data/airqualitydata-2020Q1.csv"", ""data/airqualitydata-2020Q2.csv"","
"0","            ""data/airqualitydata-2020Q3.csv"", ""data/airqualitydata-2020Q4.csv""))"
"0",""
"0","airquality_daily <- data.frame(Date=as.Date(character()),"
"0","                    Country=character(),"
"0","                    Averagepm25=numeric(),"
"0","                    Averageco=numeric(),"
"0","                    Averagepm10=numeric(),"
"0","                    Averageo3=numeric(),"
"0","                    Averageso2=numeric(),"
"0","                    Averageno2=numeric())"
"0",""
"0","for (i in 1:length(airquality_filename)) {"
"0","  airquality_temp <- airquality_filename[i] %>% read.csv(skip= 4, header = TRUE) %>%"
"0","                      select(Date, Country, City, Specie, median) %>%"
"0","                      filter(Specie==""pm25""|Specie==""co""|Specie==""pm10""|Specie==""o3"""
"0","                             |Specie==""so2""|Specie==""no2"")%>%"
"0","                      pivot_wider(names_from = Specie, values_from = median)%>%     "
"0","                      group_by(Date, Country)%>%"
"0","                      summarise(Averagepm25 = mean(pm25, na.rm = TRUE),"
"0","                                Averageco = mean(co, na.rm = TRUE),"
"0","                                Averagepm10 = mean(pm10, na.rm = TRUE),"
"0","                                Averageo3 = mean(o3, na.rm = TRUE),"
"0","                                Averageso2 = mean(so2, na.rm = TRUE),"
"0","                                Averageno2 = mean(no2, na.rm = TRUE))"
"0","  airquality_daily <- rbind(airquality_daily, airquality_temp)"
"0","}"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'Date'. You can override using the `.groups` argument.
"
"0","#join with iso"
"0","airquality_daily <- left_join(airquality_daily, iso_country_codes,"
"0","                            by = c(""Country"" = ""Country.Code2""))"
"0","airquality_daily$Date <-ymd(airquality_daily$Date)"
"0",""
"0","##check NA"
"0","checkna_airquality_daily <- is.na(airquality_daily$Country.Code3) "
"0","#sum(checkna_airquality_daily) #1230"
"0","##check which country code contains NA"
"0","#unique(airquality_daily[checkna_airquality_daily,]$Country) #XK"
"0","##Remark: all of NAs are from Kosovo. ISO doesn't recognize Kosovo as a country"
"0",""
"0","#Since we do not consider Kosovo "
"0","airquality_daily <- airquality_daily[!checkna_airquality_daily,]"
"0","#sum(is.na(airquality_daily$Country.Name)) #0 #no NA"
"0",""
"0","airquality_daily <- airquality_daily %>% select(Date, Country.Name, Country.Code3, Averagepm25, Averageco, Averagepm10, Averageo3, Averageso2, Averageno2) "
"0",""
"0",""
"0","kable(airquality_daily[1:5,],caption = ""Examples from the airquality_daily table"") %>% kable_styling(bootstrap_options = ""bordered"")"
