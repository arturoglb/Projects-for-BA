"0",""
"0","airquality_by_year <- airquality_daily %>%"
"0","  mutate("
"0","    year = format(Date, ""%y""),"
"0","    year = format(Date, ""%Y"")"
"0","  ) %>%"
"0","  group_by(year, Country.Name) %>%"
"0","  summarise("
"0","    ""PM2.5"" = mean(Averagepm25, na.rm = TRUE),"
"0","    ""CO"" = mean(Averageco, na.rm = TRUE),"
"0","    ""PM10"" = mean(Averagepm10, na.rm = TRUE),"
"0","    ""O3"" = mean(Averageo3, na.rm = TRUE),"
"0","    ""SO2"" = mean(Averageso2, na.rm = TRUE),"
"0","    ""NO2"" = mean(Averageno2, na.rm = TRUE)"
"0","  ) %>%"
"0","  relocate(year, .before = ""PM2.5"") %>%"
"0","  left_join(iso_country_codes, by = ""Country.Name"") %>%"
"0","  select(-Country.Code2) %>%"
"0","  relocate(Country.Code3, .before = year)"
"1","`summarise()` has grouped output by 'year'. You can override using the `.groups` argument.
"
"0","airquality_by_year[sapply(airquality_by_year, is.nan)] <- NA"
"0","airquality_by_year$year <- as.numeric(as.character(airquality_by_year$year))"
"0",""
"0","prep.mortality.Q2.3 <- select("
"0","  prep.mortality, location, Country.Code3, year,"
"0","  ""Neonatal preterm birth"", ""Other neonatal disorders"","
"0","  ""Sudden infant death syndrome"", ""Lower respiratory infections"","
"0","  ""Hemolytic disease and other neonatal jaundice"""
"0",")"
"0",""
"0","AIC.Q2.3 <- airquality_by_year %>%"
"0","  left_join(prep.mortality.Q2.3,"
"0","    by = c("
"0","      ""Country.Code3"" = ""Country.Code3"","
"0","      ""year"" = ""year"", ""Country.Name"" = ""location"""
"0","    )"
"0","  ) %>%"
"0","  left_join(prep.gdp,"
"0","    by = c("
"0","      ""Country.Code3"" = ""Country.Code"", ""year"" = ""year"","
"0","      ""Country.Name"" = ""Country.Name"""
"0","    )"
"0","  )"
"0",""
"0","Q2.3_2016 <- AIC.Q2.3 %>%"
"0","  filter(year == ""2016"")"
"0","Q2.3_2016 <- na.omit(Q2.3_2016)"
"0",""
"0","# Mandy - to check correlations between independent variables before running the model -> It seems they have low correlation, except PM2.5 and PM10"
"0",""
"0","explore <- subset(Q2.3_2016, select = c(""PM2.5"", ""CO"", ""PM10"", ""O3"", ""SO2"", ""NO2""))"
"0","pairs.panels(explore, lm = TRUE, cor = TRUE)"
